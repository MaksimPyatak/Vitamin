{"version":3,"file":"pass-recovery.min.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,eAAe;AAC7D;AACA;AACA;AACA;AACA,QAAQ;AACR,iDAAiD,gBAAgB;AACjE;AACA,4DAA4D,iBAAiB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,6CAA6C,mBAAmB,SAAS,WAAW;AACpF;AACA,QAAQ;AACR,iDAAiD,kBAAkB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,0CAA0C,mBAAmB,SAAS,WAAW;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,8DAA8D,IAAI;AAClE,4CAA4C,IAAI;AAChD;AACA,iDAAiD;AACjD,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA,oFAAoF,YAAY;AAChG;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC9jBA,WAAW,cAAc;AACzB;AACO;AACP;AACA;AACA;AACA,yDAAyD,EAAE,WAAW,EAAE;AACxE;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU,kGAAkG,EAAE;AAC9G;AACA;AACA,UAAU,gDAAgD,EAAE,SAAS,IAAI,oCAAoC,6CAA6C,EAAE;AAC5J;AACA;AACA,eAAe,0EAA0E,EAAE;AAC3F;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kBAAkB,EAAE,gBAAgB;AACjG;AACA,IAAI;AACJ;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA,IAAI;AACJ;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACO;AACP;AACA,kCAAkC,GAAG;AACrC;AACA;AACA,wCAAwC,+DAA+D;AACvG,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC,iBAAiB,SAAS,SAAS,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA,wFAAwF,0CAA0C,IAAI,oCAAoC;AAC1K,0CAA0C,UAAU;AACpD;AACA;AACA,yCAAyC,kEAAkE,KAAK,WAAW;AAC3H,8CAA8C,iEAAiE,KAAK,0CAA0C;AAC9J;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;UCpMA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNiD;AACa;AAC9D;AACA;AACA,yBAAyB,0DAAS;AAClC;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAAqB,G","sources":["webpack://gulp-2022/./src/js/utilits/classes.js","webpack://gulp-2022/./src/js/utilits/function.js","webpack://gulp-2022/webpack/bootstrap","webpack://gulp-2022/webpack/runtime/define property getters","webpack://gulp-2022/webpack/runtime/hasOwnProperty shorthand","webpack://gulp-2022/webpack/runtime/make namespace object","webpack://gulp-2022/./src/js/pass-recovery.js"],"sourcesContent":["/**\r\n         * Додає клас до елементу @param objectClass\r\n         * @param tabsClass клас об'єкта, де розміщені кнопки управління\r\n         * В об'єкті з класом @param tabsClass мають бути дата атрибут data-class-for-tab з назвою класу для підсвічування активної кнопки та дата атрибут data-class-for-obj, з назвою класу, що додається до @param objectClass\r\n         * @param tabClass клас кнопок, що керують @param objectClass\r\n         */\r\nexport class ClassToggler {\r\n   constructor(tabsClass, tabClass, objectClass) {\r\n      this.tabsClass = tabsClass;\r\n      this.tabClass = tabClass;\r\n      this.objectClass = objectClass;\r\n   }\r\n   #tabs = null;\r\n   #tab = null;\r\n   #manipulationObject = null;\r\n   #classForTab = null;\r\n   #classForObj = null;\r\n\r\n   #getOllObject() {\r\n      this.#tabs = document.querySelector(`.${this.tabsClass}`);\r\n      if (this.#tabs) {\r\n         this.#tab = this.#tabs.getElementsByClassName(this.tabClass);\r\n         this.#classForTab = this.#tabs.dataset.classForTab;\r\n         this.#classForObj = this.#tabs.dataset.classForObj;\r\n      } else {\r\n         console.log(`Element containing class ${this.tabsClass} not found.`);\r\n      }\r\n      this.#manipulationObject = document.querySelector(`.${this.objectClass}`);\r\n   }\r\n\r\n   addListener() {\r\n      this.#getOllObject();\r\n      this.#tabs.addEventListener('click', (e) => this.changeClass(e))\r\n   }\r\n\r\n   changeClass(e) {\r\n      let btn = e.target.closest(`.${this.tabClass}`);\r\n      if (!btn) {\r\n         return\r\n      }\r\n      if (!this.#tabs.contains(btn)) {\r\n         return\r\n      }\r\n      this.#toggleClassOfElement();\r\n      this.#addClassToTab(btn);\r\n   }\r\n\r\n   #toggleClassOfElement() {\r\n      if (this.#manipulationObject) {\r\n         if (this.#classForObj) {\r\n            this.#manipulationObject.classList.toggle(this.#classForObj);\r\n            this.#searchInput(this.#manipulationObject);\r\n         } else {\r\n            console.log(`There are no data-${this.#classForObj} in the ${this.#tabs}`);\r\n         }\r\n      } else {\r\n         console.log(`Element containing class ${this.objectClass} not found.`);\r\n      }\r\n   }\r\n\r\n\r\n   #addClassToTab(tab) {\r\n      if (this.#classForTab) {\r\n         for (const element of this.#tab) {\r\n            element.classList.remove(this.#classForTab)\r\n         }\r\n      } else {\r\n         console.log(`There are no data-${this.#classForTab} in the ${this.#tabs}`);\r\n      }\r\n      tab.classList.add(this.#classForTab)\r\n   }\r\n\r\n   #searchInput(obj) {\r\n      let inputs = obj.querySelectorAll('input', 'select', 'textarea');\r\n      inputs.forEach((element) => {\r\n         element.disabled = !element.disabled;\r\n      });\r\n   }\r\n}\r\n\r\n//    #addClassToTab -- приватний клас\r\n//   iOS 14.5 підтримується на наступних пристроях Apple:\r\n//      - iPhone 6s і новіші моделі.\r\n//      - iPad Air 2 і новіші моделі.\r\n//      - iPad mini 4 і новіші моделі.\r\n//      - iPad (5-го покоління) і новіші моделі.\r\n//      - Всі моделі iPad Pro.\r\n//      - iPod touch (7-го покоління).\r\n\r\nexport class Validator {\r\n   constructor(form) {\r\n      this.form = form;\r\n   }\r\n   errorFilds = document.querySelectorAll('.error');\r\n   emailRegExp = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/;\r\n   ///^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,8})+$/;\r\n\r\n   addressRegExp = /^[а-я\\s.]+?\\d+/i;            //???!!!!!\r\n   expirationRegExp = /^(0[1-9]|1[0-2])\\/\\d{2}$/;\r\n\r\n   validation(form = this.form) {\r\n      let isValid = true;\r\n      let n = null;\r\n      for (let i = 0; i < form.elements.length; i++) {\r\n         const element = form.elements[i];\r\n         let methodName = element.name + 'Test';\r\n         if (element.disabled) {\r\n            n++\r\n         } else if (typeof this[methodName] === \"function\") {\r\n            n += this[methodName](element);\r\n         } else {\r\n            n++\r\n         }\r\n      }\r\n      if (n !== form.elements.length) {\r\n         return false\r\n      } else {\r\n         return true\r\n      }\r\n   }\r\n   blurValidation(form = this.form) {\r\n      for (let i = 0; i < form.elements.length; i++) {\r\n         const element = form.elements[i];\r\n         if (element.name == 'file') {\r\n            break\r\n         }\r\n         element.addEventListener('blur', (e) => {\r\n            if (typeof this[element.name + 'Test'] == 'function') {\r\n               this[element.name + 'Test'](e.target);\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   backgroundValdation(form = this.form) {\r\n      //let isValid = false;\r\n      let n = 0;\r\n      for (let i = 0; i < form.elements.length; i++) {\r\n         const element = form.elements[i];\r\n         if (element.disabled) {\r\n            n++\r\n         } else if (typeof this[element.name + 'ValidationForBtn'] == 'function') {\r\n            n += this[element.name + 'ValidationForBtn'](element) ? 1 : 0;\r\n         } else {\r\n            n++\r\n         }\r\n      }\r\n      return n == form.elements.length ? true : false\r\n   }\r\n\r\n   emailTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Email can't be blank\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (!this.emailRegExp.test(input.value)) {\r\n         const message = \"Email is invalid\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   emailValidationForBtn(input) {\r\n      if (this.emailRegExp.test(input.value)) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n   firstTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Field can't be blank\";\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value.length < 3 || input.value.length > 15) {\r\n         const message = \"Field must be at least 3 and no longer than 15 characters\";\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n\r\n   firstValidationForBtn(input) {\r\n      if (input.value.length >= 3 && input.value.length <= 15) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   lastTest(input) {\r\n      return this.firstTest(input);\r\n   }\r\n\r\n   lastValidationForBtn(input) {\r\n      return this.firstValidationForBtn(input);\r\n   }\r\n\r\n   passwordTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Password can't be blank\";\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value.length < 6 || input.value.length > 15) {\r\n         const message = \"Password must be at least 6 and no longer than 15 characters\";\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   passwordValidationForBtn(input) {\r\n      if (input.value.length >= 6 && input.value.length <= 15) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   current_passwordTest(input) {\r\n      return this.passwordTest(input);\r\n   }\r\n   current_passwordValidationForBtn(input) {\r\n      return this.passwordValidationForBtn(input);\r\n   }\r\n\r\n   new_passwordTest(input) {\r\n      return this.passwordTest(input);\r\n   }\r\n   new_passwordValidationForBtn(input) {\r\n      return this.passwordValidationForBtn(input);\r\n   }\r\n\r\n   confirm_new_passwordTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Password can't be blank\";\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value != this.form.elements.new_password.value) {\r\n         const message = \"Passwords must match\";\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   confirm_new_passwordValidationForBtn(input) {\r\n      if (input.value == this.form.elements.new_password.value) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   first_addressTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Field can't be blank\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value.length < 2) {\r\n         const message = \"Field must be at least 2 characters\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      }\r\n      else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   first_addressValidationForBtn(input) {\r\n      if (input.value.length >= 2) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   cityTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Field can't be blank\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value.length < 2 || input.value.length > 15) {\r\n         const message = \"Field must be at least 2 and no longer than 15 characters\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      }\r\n      else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   cityValidationForBtn(input) {\r\n      if (input.value.length >= 2 && input.value.length <= 15) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   stateTest(input) {\r\n      const castomSelect = this.#findCastomSelect(input, 'new-select__header');\r\n      if (input.value === \"\") {\r\n         const message = \"Select from the list\";\r\n         this.isError(message, input);\r\n         if (castomSelect) {\r\n            castomSelect.classList.add('input-error');\r\n         }\r\n         input.addEventListener('change', (e) => this[input.name + 'Test'](input));\r\n         return null\r\n      } else {\r\n         if (castomSelect) {\r\n            castomSelect.classList.remove('input-error');\r\n         }\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   stateValidationForBtn(input) {\r\n      if (!(input.value === null)) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   zipTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Field can't be blank\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value.length < 7) {\r\n         const message = \"The field must contain 6 digits\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      }\r\n      else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   zipValidationForBtn(input) {\r\n      if (input.value.length === 7) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   phoneTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Field can't be blank\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value.length < 15) {\r\n         const message = \"The field must contain 11 digits\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      }\r\n      else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   phoneValidationForBtn(input) {\r\n      if (input.value.length === 15) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   card_numberTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Field can't be blank\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value.length < 19) {\r\n         const message = \"The field must contain 16 digits\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      }\r\n      else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   card_numberValidationForBtn(input) {\r\n      if (input.value.length === 19) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   card_expirationTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Field can't be blank\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (!this.expirationRegExp.test(input.value)) {\r\n         const message = \"Field is invalid\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   card_expirationValidationForBtn(input) {\r\n      if (this.expirationRegExp.test(input.value)) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n   card_cvcTest(input) {\r\n      if (input.value.length === 0) {\r\n         const message = \"Field can't be blank\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (input.value.length < 3) {\r\n         const message = \"The field must contain 3 digits\"\r\n         this.isError(message, input);\r\n         input.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      }\r\n      else {\r\n         input.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n   card_cvcValidationForBtn(input) {\r\n      if (input.value.length === 3) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   fileTest(input, form = this.form) {\r\n      const inputWrapper = input.closest('.input-file-wrapper');\r\n\r\n      if (!form.contains(inputWrapper)) {\r\n         inputWrapper = input;\r\n      }\r\n      let fileExtension;\r\n      if (input.files.length) {\r\n         fileExtension = input.files[0].name.split('.').pop().toLowerCase();\r\n      }\r\n      if (input.dataset.isfile == 'true') {\r\n         return 1\r\n      }\r\n      if (input.files.length == 0) {\r\n         const message = \"File must be attached\";\r\n         this.isError(message, input);\r\n         inputWrapper.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else if (!['jpg', 'jpeg', 'png', 'gif', 'bmp', 'pdf'].includes(fileExtension)) {\r\n         const message = \"File must be image or PDF\"\r\n         this.isError(message, input);\r\n         inputWrapper.classList.add('input-error');\r\n         input.addEventListener('input', (e) => this[input.name + 'Test'](input), { once: true });\r\n         return null\r\n      } else {\r\n         inputWrapper.classList.remove('input-error');\r\n         this.removeError(input);\r\n         return 1\r\n      }\r\n   }\r\n\r\n   fileValidationForBtn(input) {\r\n      let fileExtension\r\n      if (input.files.length) {\r\n         fileExtension = input.files[0].name.split('.').pop().toLowerCase();\r\n      }\r\n      if (input.dataset.isfile == 'true') {\r\n         return true\r\n      }\r\n      if (input.value.length !== 0 && ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'pdf'].includes(fileExtension)) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   isError(message, input) {\r\n      this.errorFilds.forEach((el) => {\r\n         if (el.id == \"error-\" + input.name) {\r\n            let label = el.innerHTML\r\n            el.innerHTML = message;\r\n            return label\r\n         }\r\n      })\r\n   }\r\n\r\n   removeError(input) {\r\n      this.errorFilds.forEach((el) => {\r\n         if (el.id == \"error-\" + input.name) {\r\n            el.innerHTML = '';\r\n         }\r\n      })\r\n   }\r\n\r\n   #findCastomSelect(element, className) {\r\n      let parent = element.parentElement;\r\n      let child = parent.getElementsByClassName(className);\r\n      if (child) {\r\n         return child[0]\r\n      } else {\r\n         return\r\n      }\r\n   }\r\n}","//import { signOutFunc } from \"../modules/firebase.js\";\r\n\r\nexport function validationNumberInput(numberInput, maxLength,) {\r\n   //input.addEventListener('input', function () {\r\n   //   const inputValue = this.value.toString();\r\n   //   console.log(inputValue);\r\n   //   console.log(inputValue.toLowerCase().search(/^\\d{3}\\s(?:\\D*\\d{3}\\s*)*$/));\r\n   //   if (inputValue.length > maxLength) {\r\n   //      this.value = inputValue.slice(0, maxLength);\r\n   //   } else if (inputValue.toLowerCase().search(/[^0-9]/g) >= 0 && inputValue.length < 4) {\r\n   //      console.log('reg1');\r\n   //      this.value = this.dataset.previousValue || '';\r\n   //   } else if (inputValue.length == 4 && inputValue[3] != ' ' && inputValue.toLowerCase().search(/[0-9]{3}[0-9]/g) >= 0) {\r\n   //      console.log(' - ');\r\n   //      this.value = inputValue.substring(0, 3) + ' ' + inputValue.substring(3);\r\n   //   } else if (inputValue.toLowerCase().search(/[0-9]{3}\\s[^0-9]{1,3}/g) < 0 && inputValue.length > 3) { //&& inputValue.toLowerCase().search(/[^0-9]{3}\\s[^0-9]/g) <= 0\r\n   //      console.log('reg2');\r\n   //      this.value = this.dataset.previousValue || '';\r\n   //      //} else if (inputValue.length == 4 && inputValue.toLowerCase().search(/[0-9]{3}[^0-9]/g)) {\r\n   //      //   console.log(' - ');\r\n   //      //   this.value = inputValue.substring(0, 3) + ' ' + inputValue.substring(3);\r\n   //   } else {\r\n   //      this.dataset.previousValue = inputValue;\r\n   //   }\r\n   //})\r\n   //const numberInput = document.getElementById(\"numberInput\");\r\n\r\n   numberInput.addEventListener(\"input\", function () {\r\n      const sanitizedValue = this.value.replace(/\\D/g, \"\");\r\n      const firstThreeDigits = sanitizedValue.slice(0, 3);\r\n      const restOfTheDigits = sanitizedValue.slice(3, maxLength);\r\n      const formattedValue = restOfTheDigits.length > 0 ? `${firstThreeDigits} ${restOfTheDigits}` : firstThreeDigits;\r\n      this.value = formattedValue;\r\n   });\r\n}\r\n\r\nexport function editPhone(numberInput) {\r\n   numberInput.addEventListener(\"input\", function () {\r\n      const sanitizedValue = this.value.replace(/\\D/g, \"\");\r\n      const firstDigit = sanitizedValue.slice(0, 1);\r\n      const secondThreeDigits = sanitizedValue.slice(1, 4);\r\n      const thirdThreeDigits = sanitizedValue.slice(4, 7);\r\n      const fourthTwoDigits = sanitizedValue.slice(7, 9);\r\n      const lastTwoDigits = sanitizedValue.slice(9, 11);\r\n      let formattedValue = `${firstDigit}`;\r\n      if (secondThreeDigits.length > 0) {\r\n         formattedValue += ` ${secondThreeDigits}`;\r\n      }\r\n      if (thirdThreeDigits.length > 0) {\r\n         formattedValue += ` ${thirdThreeDigits}`;\r\n      }\r\n      if (fourthTwoDigits.length > 0) {\r\n         formattedValue += ` ${fourthTwoDigits}`;\r\n      }\r\n      if (lastTwoDigits.length > 0) {\r\n         formattedValue += ` ${lastTwoDigits}`;\r\n      }\r\n      this.value = formattedValue;\r\n   });\r\n}\r\n\r\nexport function editNumberCard(numberCardInput) {\r\n   numberCardInput.addEventListener(\"input\", function () {\r\n      const sanitizedValue = this.value.replace(/\\D/g, \"\");\r\n      const firstDigit = sanitizedValue.slice(0, 4);\r\n      const secondThreeDigits = sanitizedValue.slice(4, 8);\r\n      const thirdThreeDigits = sanitizedValue.slice(8, 12);\r\n      const lastTwoDigits = sanitizedValue.slice(12, 16);\r\n      let formattedValue = `${firstDigit}`;\r\n      if (secondThreeDigits.length > 0) {\r\n         formattedValue += ` ${secondThreeDigits}`;\r\n      }\r\n      if (thirdThreeDigits.length > 0) {\r\n         formattedValue += ` ${thirdThreeDigits}`;\r\n      }\r\n      if (lastTwoDigits.length > 0) {\r\n         formattedValue += ` ${lastTwoDigits}`;\r\n      }\r\n      this.value = formattedValue;\r\n   });\r\n}\r\nexport function editExpiration(expirationInput) {\r\n   expirationInput.addEventListener(\"input\", function () {\r\n      const sanitizedValue = this.value.replace(/\\D/g, \"\");\r\n      const firstDigit = sanitizedValue.slice(0, 2);\r\n      const lastTwoDigits = sanitizedValue.slice(2, 4);\r\n      let formattedValue = `${firstDigit}`;\r\n      if (lastTwoDigits.length > 0) {\r\n         formattedValue += `/${lastTwoDigits}`;\r\n      }\r\n      this.value = formattedValue;\r\n   });\r\n}\r\nexport function editCvc(cvcInput) {\r\n   cvcInput.addEventListener(\"input\", function () {\r\n      this.value = this.value.replace(/\\D/g, \"\").slice(0, 3);\r\n   });\r\n}\r\nexport function adjustOptionsListPosition(optionsList, upwardsClass) {\r\n   const windowHeight = window.innerHeight;\r\n   const optionsListHeight = optionsList.clientHeight;\r\n   const optionsListOffsetTop = optionsList.getBoundingClientRect().top;\r\n   if (windowHeight - optionsListOffsetTop < optionsListHeight) {\r\n      optionsList.classList.add(upwardsClass);\r\n   } else {\r\n      optionsList.classList.remove(upwardsClass);\r\n   }\r\n}\r\nexport function selectItem(target, itemClass, activeItemClass) {\r\n   if (target.classList.contains(itemClass) && target.classList.contains(activeItemClass)) {\r\n      return\r\n   } else {\r\n      return true\r\n   }\r\n}\r\n\r\n\r\nexport function renderFilteredCards(products, parentElement, productsType) {\r\n   products.forEach((data) => {\r\n      const card = renderCard(data, productsType, data.id);\r\n      parentElement.appendChild(card);\r\n   })\r\n}\r\nexport function productsFilter(products, keyParam, valueParam) {\r\n   const filterProducts = [];\r\n   products.forEach((doc) => {\r\n      const data = doc.data().base;\r\n      if (data[keyParam] == valueParam) {\r\n         data.id = doc.id;\r\n         filterProducts.push(data);\r\n      }\r\n   })\r\n   return filterProducts\r\n}\r\nexport function renderCard(data, productsType, id) {\r\n   const card = document.createElement('a');\r\n   card.href = `product.html?id=${id}`\r\n   card.classList.add('product-card');\r\n   card.innerHTML = `\r\n   <div class=\"product-card__sale-box ${data.sale == '' ? 'product-card__sale-box--dispaly--none' : ''}\">\r\n     <div>-${data.sale}%</div>\r\n   </div>\r\n   <div class=\"product-card__img-block\">\r\n     <div class=\"product-card__wrapper-img\">\r\n     <picture>\r\n     <source srcset=\"${data.webP}\" type=\"image/webp\">\r\n     <img src=\"${data.png}\" alt=\"${data.name}\">\r\n     </picture>\r\n     </div>\r\n   </div>\r\n   <div class=\"product-card__content\">\r\n     <div class=\"product-card__info-block\">\r\n       <div class=\"product-card__type product-card__type--color--@@type\" style=\"color:${productsType.data()[data.type].text_color}\">${productsType.data()[data.type].name}</div>\r\n       <div class=\"product-card__title\">${data.name}</div>\r\n     </div>\r\n     <div class=\"product-card__prise-block\">\r\n       <div class=\"product-card__prise ${data.sale != '' ? 'product-card__prise--text--strikethrough' : ''}\">$${data.price}</div>\r\n       <div class=\"product-card__sale-prise ${data.sale == '' ? 'product-card__sale-prise--display--none' : ''}\">$${(data.sale * data.price / 100).toFixed(2)}</div>\r\n     </div>\r\n   </div>`;\r\n   return card\r\n}\r\nexport function changeBackgrounHeader(changedLogo) {\r\n   window.addEventListener('scroll', () => {\r\n      const header = document.querySelector('.header');\r\n      if (window.scrollY > 50) {\r\n         header.classList.add('header--active');\r\n         if (changedLogo) {\r\n            changeLogoOfHeader(true);\r\n         }\r\n      } else {\r\n         header.classList.remove('header--active');\r\n         if (changedLogo) {\r\n            changeLogoOfHeader(false);\r\n         }\r\n      }\r\n   })\r\n}\r\n\r\nexport function changeLogoOfHeader(remove) {\r\n   const logo = document.querySelector('.header__logo');\r\n   if (remove) {\r\n      logo.classList.remove('header__logo--color--white');\r\n   } else {\r\n      logo.classList.add('header__logo--color--white');\r\n   }\r\n}\r\n\r\n//!!!!Потрібна?\r\n//export async function determineAuthState(link) {\r\n//   try {\r\n//      const user = await signOut(auth);\r\n//      return user\r\n//   } catch (error) {\r\n//      console.log(error);\r\n//   }\r\n//}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Validator } from \"./utilits/classes.js\";\r\nimport { changeBackgrounHeader } from \"./utilits/function.js\";\r\n\r\nconst form = document.forms.sign_in;\r\nconst regValidator = new Validator(form);\r\nconst submitBtn = form.querySelector('.recover__submit');\r\n\r\nregValidator.blurValidation();\r\n\r\nfor (let i = 0; i < form.elements.length; i++) {\r\n   const element = form.elements[i];\r\n   element.addEventListener('input', validationForBtn);\r\n}\r\nfunction validationForBtn() {\r\n   if (regValidator.backgroundValdation()) {\r\n      submitBtn.classList.remove('no-active-button');\r\n   } else {\r\n      submitBtn.classList.add('no-active-button');\r\n   }\r\n}\r\nform.addEventListener('submit', submitFormHandler);\r\nfunction submitFormHandler(event) {\r\n   event.preventDefault();\r\n\r\n   if (regValidator.validation()) {\r\n      try {\r\n         submitBtn.classList.add('no-active-button');\r\n         submitBtn.disabled = true;\r\n         submitBtn.style.cursor = 'not-allowed';\r\n\r\n         window.location.replace(\"subscriptions.html\")\r\n      } catch (error) {\r\n         submitBtn.classList.remove('no-active-button')\r\n         submitBtn.disabled = false;\r\n         submitBtn.style.cursor = 'pointer';\r\n         console.log(error);\r\n      }\r\n   }\r\n}\r\n\r\nchangeBackgrounHeader();"],"names":[],"sourceRoot":""}