/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/account-overview.js":
/*!************************************!*\
  !*** ./src/js/account-overview.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_select_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/select.js */ \"./src/js/modules/select.js\");\n\n\n//# sourceURL=webpack://gulp-2022/./src/js/account-overview.js?");

/***/ }),

/***/ "./src/js/modules/select.js":
/*!**********************************!*\
  !*** ./src/js/modules/select.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n//Додати ще, щоб при фокусуванні не відкривався список опцій, а просто був елемент в фокусі, а вже при натисканні ентр або стрілки в низ можна буловідкрити список. Після вибору опції залишати  елемент в фокусі для можливості здійснення повторного відкриття списку за допомогою ентр або стрілки вниз\r\n\r\nconst selectElements = document.querySelectorAll('.select');\r\nconsole.log(document.forms[0].elements.state.value);\r\nselectElements.forEach(function (selectElement) {\r\n   const upwardsClassSelectList = 'new-select__list--upwards';\r\n   const _this = selectElement;\r\n   const selectOption = _this.querySelectorAll('option');\r\n   const selectOptionLength = selectOption.length;\r\n   //duration = 450;\r\n\r\n   _this.style.display = 'none';\r\n   const selectWrapper = document.createElement('div');\r\n   selectWrapper.classList.add('select');\r\n   _this.parentNode.insertBefore(selectWrapper, _this);\r\n   selectWrapper.appendChild(_this);\r\n\r\n   const newSelect = document.createElement('div');\r\n   newSelect.classList.add('new-select');\r\n   _this.insertAdjacentElement('afterend', newSelect);\r\n\r\n   //const selectHead = _this.nextElementSibling;\r\n   const selectHead = document.createElement('div');\r\n   selectHead.classList.add('new-select__header');\r\n   selectHead.textContent = _this.querySelector('option:disabled').textContent;\r\n   newSelect.setAttribute('tabindex', '0');\r\n   newSelect.appendChild(selectHead);\r\n   const selectList = document.createElement('div');\r\n   selectList.classList.add('new-select__list');\r\n   selectHead.insertAdjacentElement('afterend', selectList);\r\n   selectHead.innerHTML = `\r\n       <span class=\"new-select__arrow arrow\"></span>\r\n       ${selectHead.innerHTML}\r\n   `;\r\n\r\n   for (let i = 1; i < selectOptionLength; i++) {\r\n      const newSelectItem = document.createElement('div');\r\n      newSelectItem.classList.add('new-select__item');\r\n      const newSelectSpan = document.createElement('span');\r\n      newSelectSpan.textContent = selectOption[i].textContent;\r\n      newSelectItem.appendChild(newSelectSpan);\r\n      newSelectItem.setAttribute('data-value', selectOption[i].value);\r\n      //newSelectItem.setAttribute('tabindex', '0');\r\n      selectList.appendChild(newSelectItem);\r\n   }\r\n\r\n   const selectItem = selectList.querySelectorAll('.new-select__item');\r\n   selectList.style.display = 'none';\r\n   let clicked = false;\r\n   selectHead.addEventListener('click', () => {\r\n      if (!clicked) {\r\n         choiseSelect();\r\n         //addNavigationForOptions();\r\n         //adjustOptionsListPosition(selectList, upwardsClassSelectList);\r\n      }\r\n   });\r\n   newSelect.addEventListener('focus', (e) => {\r\n      clicked = !clicked;\r\n      choiseSelect();\r\n      window.setTimeout(() => clicked = false, 100)\r\n   });\r\n   newSelect.addEventListener('blur', () => {\r\n      clicked = false;\r\n      blurSelect();\r\n      //addNavigationForOptions();\r\n\r\n      removeClass(selectItem, 'new-select__item--active');\r\n      adjustOptionsListPosition(selectList, upwardsClassSelectList);\r\n   });\r\n\r\n   const clickOutsideNewSelect = function (event) {\r\n      if (!newSelect.contains(event.target)) {\r\n         selectList.style.display = 'none';\r\n         selectHead.classList.remove('on');\r\n         document.removeEventListener(\"click\", clickOutsideNewSelect);\r\n         currentElementIndex = undefined;\r\n      }\r\n   };\r\n\r\n   function removeClass(arrayElements, classForRemove) {\r\n      currentElementIndex = undefined;\r\n      for (let i = 0; i < arrayElements.length; i++) {\r\n         const element = arrayElements[i];\r\n         element.classList.remove(classForRemove)\r\n      }\r\n   }\r\n\r\n   function choiseSelect() {\r\n      if (!selectHead.classList.contains('on')) {\r\n         selectHead.classList.add('on');\r\n         selectList.style.display = 'block';\r\n         addNavigationForOptions();\r\n         adjustOptionsListPosition(selectList, upwardsClassSelectList);\r\n\r\n         function actionsAfterSelectingOption(item) {\r\n            let chooseItem = item.getAttribute('data-value');\r\n\r\n            _this.value = chooseItem;\r\n\r\n            selectHead.innerHTML = ` <span class=\"new-select__arrow arrow\"></span>   ${item.querySelector('span').textContent}`;\r\n\r\n            selectList.style.display = 'none';\r\n            selectHead.classList.remove('on');\r\n            removeClass(selectItem, 'new-select__item--active');\r\n            removeUpwardsClass(selectList, upwardsClassSelectList);\r\n            document.removeEventListener(\"click\", clickOutsideNewSelect);\r\n         }\r\n\r\n         document.addEventListener('keydown', downKeyEnter);\r\n         function downKeyEnter(event) {\r\n            if (event.key === 'Enter' && selectList.style.display === 'block') {\r\n               event.preventDefault();\r\n               for (let i = 0; i < selectItem.length; i++) {\r\n                  const element = selectItem[i];\r\n                  if (element.classList.contains('new-select__item--active')) {\r\n                     actionsAfterSelectingOption(element);\r\n                  }\r\n               }\r\n            }\r\n         }\r\n\r\n         document.addEventListener(\"click\", clickOutsideNewSelect);\r\n\r\n         //Не зайве?\r\n         selectItem.forEach(function (item) {\r\n            item.addEventListener('click', () => actionsAfterSelectingOption(item));\r\n         });\r\n\r\n      } else {\r\n         selectHead.classList.remove('on');\r\n         selectList.style.display = 'none';\r\n         removeUpwardsClass(selectList, upwardsClassSelectList);\r\n         removeClass(selectItem, 'new-select__item--active');\r\n      }\r\n   }\r\n\r\n   function blurSelect() {\r\n      selectHead.classList.remove('on');\r\n      selectList.style.display = 'none';\r\n   }\r\n\r\n   function addNavigationForOptions() {\r\n      document.removeEventListener('keydown', navigationByOptions);\r\n      document.addEventListener('keydown', navigationByOptions);\r\n\r\n   }\r\n   function navigationByOptions(event) {\r\n      if (event.key === 'ArrowDown' && (document.activeElement == (newSelect || selectHead) || document.activeElement.parentElement === selectList)) {\r\n         event.preventDefault()\r\n         focusNextElement();\r\n      } else if (event.key === 'ArrowUp' && (document.activeElement == (newSelect || selectHead) || document.activeElement.parentElement === selectList)) {\r\n         event.preventDefault()\r\n         focusPreviousElement();\r\n      }\r\n   }\r\n   let currentElementIndex;\r\n\r\n   function focusNextElement() {\r\n      if (currentElementIndex == undefined) {\r\n         currentElementIndex = 0;\r\n         selectItem[currentElementIndex].classList.add('new-select__item--active');\r\n      } else if (currentElementIndex < selectItem.length - 1) {\r\n         selectItem[currentElementIndex].classList.remove('new-select__item--active');\r\n         currentElementIndex++;\r\n         selectItem[currentElementIndex].classList.add('new-select__item--active');\r\n      } else {\r\n         selectItem[currentElementIndex].classList.remove('new-select__item--active');\r\n         currentElementIndex = 0;\r\n         selectItem[currentElementIndex].classList.add('new-select__item--active');\r\n      }\r\n   }\r\n\r\n   function focusPreviousElement() {\r\n      if (currentElementIndex === undefined) {\r\n         currentElementIndex = selectItem.length - 1;\r\n         selectItem[currentElementIndex].classList.add('new-select__item--active');\r\n      } else if (currentElementIndex > 0) {\r\n         selectItem[currentElementIndex].classList.remove('new-select__item--active');\r\n         currentElementIndex--;\r\n         selectItem[currentElementIndex].classList.add('new-select__item--active');\r\n      } else {\r\n         selectItem[currentElementIndex].classList.remove('new-select__item--active');\r\n         currentElementIndex = selectItem.length - 1;\r\n         selectItem[currentElementIndex].classList.add('new-select__item--active');\r\n      }\r\n   }\r\n});\r\n\r\nfunction adjustOptionsListPosition(optionsList, upwardsClass) {\r\n   const windowHeight = window.innerHeight;\r\n   const optionsListHeight = optionsList.clientHeight;\r\n   const optionsListOffsetTop = optionsList.getBoundingClientRect().top;\r\n\r\n   if (windowHeight - optionsListOffsetTop < optionsListHeight) {\r\n      optionsList.classList.add(upwardsClass);\r\n   } else {\r\n      optionsList.classList.remove(upwardsClass);\r\n   }\r\n}\r\nfunction removeUpwardsClass(optionsList, upwardsClass) {\r\n   optionsList.classList.remove(upwardsClass);\r\n}\n\n//# sourceURL=webpack://gulp-2022/./src/js/modules/select.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/account-overview.js");
/******/ 	
/******/ })()
;